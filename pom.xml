<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<groupId>org.webjars</groupId>
	<artifactId>linkuriousjs</artifactId>
	<version>1.0.8-SNAPSHOT</version>
	<name>linkuriousjs</name>
	<description>WebJar for linkuriousjs (sigmajs fork)</description>
	<url>http://webjars.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<upstream.version>1.0.8</upstream.version>
		<upstream.directory>v${upstream.version}</upstream.directory>
		<!-- https://github.com/Linkurious/linkurious.js/releases/download/v1.0.7/linkurious-v1.0.7.zip -->
		<upstream.file>linkurious-v${upstream.version}.zip</upstream.file>
		<upstream.url>https://github.com/Linkurious/linkurious.js/archive/linkurious-version.zip</upstream.url>
		<destDir>${project.build.outputDirectory}/META-INF/resources/webjars/${project.artifactId}/${project.version}</destDir>
		<requirejs>
    {
        paths: {
            'sigma': 'sigma.require'
        },
        shim: {
            'sigma': {
                exports: 'sigma'
            }
        }
    }
		</requirejs>
	</properties>

	<developers>
		<developer>
			<id>dilbertside</id>
			<name>dilbert</name>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://github.com/jquery/jquery/blob/master/MIT-LICENSE.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>http://github.com/webjars/linkuriousjs</url>
		<connection>scm:git:https://github.com/webjars/linkuriousjs.git</connection>
		<developerConnection>scm:git:https://github.com/webjars/linkuriousjs.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
              <target>
								<echo message="download archive..." />
								<get src="${upstream.url}" dest="${project.build.directory}/${project.artifactId}.zip"  skipexisting="true" verbose="true" usetimestamp="true"/>
								<echo message="unzip archive..." />
								<unzip src="${project.build.directory}/${project.artifactId}.zip" dest="${project.build.directory}/${project.artifactId}-${project.version}">
								  <mapper>
										<!-- Strip leading directory off each path sigma.js-master-->
										<cutdirsmapper dirs="1" />
									</mapper>
								</unzip>
								<echo message="unzip done" />
								<!-- from http://addyosmani.com/blog/making-maven-grunt/ -->
								<echo message="npm config"/>
								<!-- <exec executable="cmd_update.sh" failonerror="true" osfamily="unix"/> -->
								<exec executable="npm" dir="${project.build.directory}/${project.artifactId}-${project.version}" osfamily="unix" failonerror="true">
									<arg line="config set color false"/>
								</exec>
				        <echo message="npm install"/>
								<exec executable="npm" dir="${project.build.directory}/${project.artifactId}-${project.version}" osfamily="unix" failonerror="true">
				            <arg line="install"/>
				        </exec>
				        <echo message="npm run build"/>
                <exec executable="npm" dir="${project.build.directory}/${project.artifactId}-${project.version}" osfamily="unix" failonerror="true">
                    <arg line="run build"/>
                </exec>
        
								<echo message="moving minified..." />
								<move todir="${destDir}">
									<fileset dir="${project.build.directory}/${project.artifactId}-${project.version}/build" />
								</move>
								<echo message="moving readme..." />
								<move file="${project.build.directory}/${project.artifactId}-${project.version}/README.md" todir="${destDir}"/>
								<echo message="moving src..." />
								<move todir="${destDir}/src">
									<fileset dir="${project.build.directory}/${project.artifactId}-${project.version}/src" />
								</move>
								<echo message="moving src plugins..." />
								<move todir="${destDir}/src/plugins">
									<fileset dir="${project.build.directory}/${project.artifactId}-${project.version}/plugins" />
								</move>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>

			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.5</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>sonatype-nexus-staging</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
